function compute28(age,alp,ggt,hbeag,hepatic_encephalopathy,na,pta,tbil)
{
					 
	//输入的参数
	var input = [[age],
	  			 [alp],
				 [ggt],
				 [hbeag],
				 [hepatic_encephalopathy],
				 [na],
				 [pta],
				 [tbil]];
	
	//标准化-均值
	var bjh_avg = [[43.7376],
				   [137.426],
				   [105.177],
				   [0.671756],
				   [0.231678],
				   [135.533],
				   [28.5766],
				   [318.327]];
	
	//计算标准化-去均值
	var bjh_q_avg = new Array();
	var size = input.length;
	for(var i=0;i<size;i++){
		if(input[i]==""||input[i]==null){
			bjh_q_avg[i] = 0;
		}else{
			bjh_q_avg[i] = parseFloat(input[i])-bjh_avg[i];
		}
	}
	
	//标准化-标准卡
	var bjh_bjk = [[11.3899],
				   [59.104],
				   [76.998],
				   [0.470173],
				   [0.422404],
				   [4.69004],
				   [10.2034],
				   [149.344]];
	
	//标准化_去方差
	var bjh_q_fc = new Array();
	for(var j=0;j<size;j++){
		bjh_q_fc[j] = bjh_q_avg[j]/bjh_bjk[j];
	}
		
	//激活函数
	var LogisticSigmoid = new Array();
	for(var k=0;k<size;k++){
		LogisticSigmoid[k] = 1/(1+math.exp(-bjh_q_fc[k]));
	}
	LogisticSigmoid[size] = 1;
	
	//输入层->隐藏层1
	var Weight_Biases = [
		[-0.00769794,-0.537325,1.19862,-0.852691,-0.786578,1.8312,0.622045,-0.0432038,-1.86785],
		[0.367462,1.00308,0.841255,-0.177762,-1.42516,0.844898,-0.285018,0.75799,-1.16032],
		[-0.128616,-1.58863,-0.992184,1.03158,-0.58485,-0.662923,-0.629003,-0.463453,-0.0189913],
		[0.743053,-0.303507,0.590105,1.2057,1.15048,0.641544,-0.173904,-0.0550115,0.146379],
		[-1.18138,-1.59266,1.09876,0.48537,1.82548,0.41912,1.46555,-0.460645,0.277082],
		[-2.19115,1.51362,1.33774,0.682147,-1.7513,-0.911499,0.204913,-0.441753,-0.296518],
		[1.20113,-1.43947,-0.182607,-0.0841545,-0.939254,-0.574157,-0.210181,1.42068,-0.778312],
		[-0.161041,-0.321136,0.582699,-1.05085,0.0316445,-1.36639,0.414696,-0.358135,-0.685202],
		[1.32459,1.04646,0.388773,-1.27864,-0.239125,0.703566,-0.29531,-0.422679,0.56322],
		[-0.84584,1.62996,-0.230592,0.945022,-0.458386,0.111106,-0.0415002,2.16348,-0.319895],
		[-1.1273,-1.2546,0.129036,0.382857,-1.72492,0.195368,0.490454,1.35384,0.825811],
		[0.364276,0.667489,1.8214,0.310401,-0.479073,-1.2698,-2.30773,2.72975,-0.467745],
		[0,0,0,0,0,0,0,0,1]
    ];
	
	//输入层->输出
	var result = math.multiply(Weight_Biases,LogisticSigmoid);
	
	//激活函数->隐藏层1输入
    var LogisticSigmoid2 = new Array();
    for(var l=0;l<result.length-1;l++){
     	LogisticSigmoid2[l] = 1/(1+math.exp(-result[l]));
    }
    /*最后一个数值没有应用函数*/
    LogisticSigmoid2[result.length-1]=1;
	
	//隐藏层1→隐藏层2
    var Weight_Biases2 = [
        [-0.00702473,0.308997,0.830764,0.0230912,-0.0857337,-0.765688,0.0879377,-0.57547,0.828512,-0.026993,-0.774572,0.179388,-0.709687],
        [1.72178,-0.641727,0.134326,0.637523,-1.27742,-1.20075,-1.62052,0.641526,-0.762172,1.22789,0.116491,-0.190787,1.02508],
        [-0.362266,-0.116902,-0.535468,-0.63956,-0.655499,0.102753,0.905098,-0.47142,0.286933,-0.990161,0.0423276,0.306323,-0.243728],
        [-1.96615,1.12527,-1.98111,-0.35664,0.455382,1.91252,-0.0568793,-0.378846,1.35571,-1.27306,1.36017,-1.66553,-0.384854],
        [0.0572511,-0.268763,-0.895231,0.46828,-0.875517,-0.415584,0.00280877,-0.478987,0.68646,0.255805,0.646805,0.0686265,0.164727],
        [0.99895,-0.831208,-0.644586,0.209499,-1.8314,-0.866983,-0.743924,0.863215,-0.0931469,1.06534,-0.419734,1.42679,-0.358025],
        [-0.217322,0.678775,-0.88963,0.17755,0.753361,0.381045,0.264893,-0.230249,0.864867,-0.6679,-0.462477,0.272889,-0.322082],
        [-0.593358,1.15283,0.511659,0.00373461,1.4342,0.702783,1.46294,-1.23296,-0.0518081,0.418475,1.26071,-1.68683,-0.40152],
        [0,0,0,0,0,0,0,0,0,0,0,0,1]
	];
	
	//隐藏层1输出
	var result2 = math.multiply(Weight_Biases2,LogisticSigmoid2);
	
	//激活函数→隐藏层2-输入
    var LogisticSigmoid3 = new Array();
    for(var m=0;m<result2.length-1;m++){
       	LogisticSigmoid3[m] = 1/(1+math.exp(-result2[m]));
    }
    /*最后一个数值没有应用函数*/
    LogisticSigmoid3[result2.length-1]=1;
	
	//隐藏层2→输出层
    var Weight_Biases3 = [
    	[-0.799195,-2.43759,1.17956,3.24377,-0.376592,-2.36177,1.0236,2.11225,-0.672963],
       	[-0.359865,1.78832,0.331768,-3.03869,-0.0291854,1.57303,-0.0162794,-1.95367,0.643365],
       	[0,0,0,0,0,0,0,0,1]
    ];
	
	//隐藏层1输出
	var result3 = math.multiply(Weight_Biases3,LogisticSigmoid3);
	
	//转阴概率
    var zyin_percent = math.exp(result3[0])/(math.exp(result3[0])+math.exp(result3[1]));
    //转阳概率
    var zyang_percent = math.exp(result3[1])/(math.exp(result3[0])+math.exp(result3[1]));
        
	return zyang_percent;
	
}